name: CI Pipeline

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: dodo
          POSTGRES_USER: dodo_user
          POSTGRES_PASSWORD: dodo_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U dodo_user -d dodo"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        env:
          DB_NAME: dodo
          DB_USER: dodo_user
          DB_PASSWORD: dodo_password
          DB_HOST: localhost
          DB_PORT: 5432
        run: python manage.py migrate

      - name: Run Tests
        env:
          DB_NAME: dodo
          DB_USER: dodo_user
          DB_PASSWORD: dodo_password
          DB_HOST: localhost
          DB_PORT: 5432
        run: python manage.py test || exit 1

      - name: Build Docker Image
        run: docker build -t dodo_web:latest .

      - name: Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker tag dodo_web:latest ${DOCKER_USERNAME}/dodo:latest
          docker push ${DOCKER_USERNAME}/dodo:latest

      - name: Send Slack Notification on Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"✅ CI Pipeline succeeded!"}' $SLACK_WEBHOOK_URL

      - name: Send Slack Notification on Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"❌ CI Pipeline failed!"}' $SLACK_WEBHOOK_URL
