name: CI Pipeline for DoDo

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: dodo
          POSTGRES_USER: dodo_user
          POSTGRES_PASSWORD: dodo_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check Docker Compose Version
      run: |
        docker compose version

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test
      continue-on-error: false

    - name: Send Slack Failure Notification
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline Failed: Tests failed."}' $SLACK_WEBHOOK_URL

    - name: Build Docker Image
      if: success()
      run: |
        docker build -t touqeerjadoon55/dodo:latest .

    - name: Login to DockerHub
      if: success()
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Push Docker Image
      if: success()
      run: |
        docker push touqeerjadoon55/dodo:latest

    - name: Remove Docker Image
      if: success()
      run: |
        docker rmi touqeerjadoon55/dodo:latest

    - name: Send Slack Success Notification
      if: success()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline Success: Image pushed to DockerHub."}' $SLACK_WEBHOOK_URL
