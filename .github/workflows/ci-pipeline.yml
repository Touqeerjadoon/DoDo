name: CI Pipeline for DoDo

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Compose
      run: |
        docker compose version

    - name: Start Services
      run: |
        docker compose up -d --build
      env:
        POSTGRES_DB: dodo
        POSTGRES_USER: dodo_user
        POSTGRES_PASSWORD: dodo_password

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          docker compose exec db pg_isready -U dodo_user -d dodo && break
          sleep 5
        done

    - name: Run Migrations
      run: |
        docker compose exec web python manage.py migrate

    - name: Run Tests
      run: |
        docker compose exec web python manage.py test
      continue-on-error: false

    - name: Send Slack Failure Notification
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline Failed: Tests failed."}' $SLACK_WEBHOOK_URL

    - name: Push Docker Image
      if: success()
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag dodo_web:latest touqeerjadoon55/dodo:latest
        docker push touqeerjadoon55/dodo:latest

    - name: Send Slack Success Notification
      if: success()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline Success: Image pushed to DockerHub."}' $SLACK_WEBHOOK_URL